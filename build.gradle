plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.14'
    id 'io.spring.dependency-management' version '1.1.2'
    id "com.github.node-gradle.node" version "5.0.0"
}

group = 'com.talan'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.postgresql:postgresql'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    compileOnly 'org.projectlombok:lombok'
    compileOnly('org.mapstruct:mapstruct-processor:1.5.5.Final')

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes(
                'Main-Class': 'com.talan.githubsearch.GithubSearchApplication'
        )
    }
}

tasks.register('buildAngularApp', NpxTask) {
    dependsOn npmInstall
    workingDir = file("/src/ui/")
    command = 'ng'
    args = ['build']
    inputs.files('package.json', 'package-lock.json', 'angular.json', 'tsconfig.json', 'tsconfig.app.json')
    inputs.dir('src/ui')
    inputs.dir(fileTree("/src/ui/node_modules").exclude(".cache"))
}

processResources {
    dependsOn buildAngularApp
    from('src/ui/dist/ui') {
        into 'static'
    }
}

